{"version":3,"sources":["components/Header.js","helpers/isGain.js","helpers/formatNumber.js","components/IndexesBody.js","helpers/alert.js","components/NewsBody.js","components/TickerGraph.js","components/TickerBody.js","components/SectorsBody.js","components/Footer.js","index.js"],"names":["Header","props","align","flex","className","title","subTitle","options","onSelect","onSearch","Search","style","fontSize","placeholder","searchFunction","enterButton","margin","Clock","state","date","Date","this","timerID","setInterval","tick","setState","toLocaleTimeString","React","Component","isGain","change","percentChange","parseFloat","toFixed","CaretUpOutlined","CaretDownOutlined","formatNumber","value","toLocaleString","alertError","undefined","window","alert","NewsBody","error","isLoaded","items","fetchNewsData","fetch","then","res","json","result","headline","imageURL","url","loaded","newsCards","newsItems","i","length","urlToImage","push","key","href","target","rel","NewsContents","image","BlankContents","display","conditionalRender","width","loading","span","marginRight","shape","icon","AlignLeftOutlined","size","src","TickerGraph","type","interval","changeInterval","bind","isError","fetchGraphData","prevProps","stockTicker","range","inputInterval","data","console","log","aspect","height","top","right","left","bottom","strokeDasharray","dataKey","yAxisId","domain","yAxisID","stroke","activeDot","r","RangeSelection","menu","onClick","e","Item","LineChartOutlined","justify","overlay","TickerBody","fetchTickerData","values","FormatTitle","TickerContents","quote","TickerInfo","SectorsBody","fetchSectorData","sectorCards","sectorItems","Object","keys","forEach","SectorContents","cardTitle","gutter","float","Footer","LinkedinOutlined","TwitterOutlined","GithubOutlined","CardBody","toUpperCase","background","keyword","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e25e4722.chunk.js","sourcesContent":["import React from 'react';\nimport {PageHeader, AutoComplete, Row, Col, Input} from 'antd';\n\n\nfunction Header(props){\n  return(\n    <>\n      <Row align=\"middle\">\n        <Col flex={20}>\n          <PageHeader\n            className=\"site-page-header\"\n            title=\"Stock Tickr\"\n            subTitle=\"Quick & easy\"\n          />\n        </Col>\n        <Col flex={70}>\n          <AutoComplete\n            className = \"searchBar\"\n            options={null}\n            onSelect={null}\n            onSearch={null}\n          >\n          <Input.Search\n            style={{\n              fontSize: 12,\n            }}\n            placeholder=\"TSLA\"\n            onSearch={props.searchFunction} enterButton\n          />\n          </AutoComplete>\n        </Col>\n        <Col flex ={1} style={{margin:\"0px 10px\"}}>\n          <Clock />\n        </Col>\n      </Row>\n\n    </>\n  );\n}\n\nclass Clock extends React.Component {\n  constructor(props){\n    super(props);\n    //Only place you assign this.state is the constructor\n    this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>{this.state.date.toLocaleTimeString()}</h2>\n      </div>\n    );\n  }\n}\n\nexport {Header};\n","import React from 'react';\nimport { CaretUpOutlined, CaretDownOutlined } from '@ant-design/icons';\n\nfunction isGain(change){\n    const percentChange = parseFloat(change).toFixed(2);\n    if (percentChange > 0){\n      return (\n        <span className=\"green\">\n          <CaretUpOutlined className=\"green\"/> &nbsp; {percentChange}%\n        </span> \n      );\n    } else if (percentChange < 0) {\n      return (\n        <span className=\"red\">\n          <CaretDownOutlined /> &nbsp; {percentChange}%\n        </span>\n      )\n    } else {\n      return <>-</>;\n    }\n  }\n\nexport {isGain};","function formatNumber(value) {\n  return parseFloat(value).toLocaleString();\n}\n\nexport {formatNumber};","import React from 'react';\nimport { Card, Row, Col } from 'antd';\nimport { isGain } from '../helpers/isGain';\nimport { formatNumber } from '../helpers/formatNumber';\n\nfunction IndexesBody() {\n  return (\n    <Card title=\"Indexes\" style={{ height: \"auto\" }} className=\"card-stocks\">\n      <div>\n        <IndexesContents key=\"SPY\" stockTicker=\"SPY\" stockTitle=\"S&P 500\" />\n        <IndexesContents key=\"NDAQ\" stockTicker=\"NDAQ\" stockTitle=\"Nasdaq\" />\n        <IndexesContents key=\"RUT\" stockTicker=\"^RUT\" stockTitle=\"Russell 2000 \" />\n      </div>\n    </Card>\n  );\n}\n\nclass IndexesContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n  componentDidMount() {\n    fetch(\"http://localhost:3001/alphavantage/GLOBAL_QUOTE/\"+this.props.stockTicker)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n  //event handle on click to switch between percent and actual value\n  render() {\n    return (\n      <Row gutter={[8, 8]}>\n        <Card loading={!this.state.isLoaded} className=\"stock-indexes\">\n          <Col>\n            {this.props.stockTitle}\n            <span \n              title={\"$\"+this.state.items[\"Change\"]}\n              style={{float:\"right\"}}\n            >\n              {isGain(this.state.items[\"Change-percent\"])}\n              &nbsp; {formatNumber(this.state.items.Price)}\n            </span>\n          </Col>\n        </Card>\n      </Row>);\n  }\n}\n\nexport {IndexesBody};\n","function alertError(value = {'error':'Server error Please try again later'}){\n  if(value['error'] !== undefined){\n    window.alert(value['error']);\n    return true\n  }\n  return false\n}\n\nexport {alertError};","import React from 'react';\nimport { Card, Row, Col, Avatar } from 'antd';\nimport { AlignLeftOutlined } from '@ant-design/icons';\nimport { alertError } from '../helpers/alert';\n\nclass NewsBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: {}\n    };\n  }\n  componentDidMount() {\n    this.fetchNewsData()\n    this.timerID = setInterval(\n        () => this.fetchNewsData(),\n        600000\n      );\n  }\n\n  fetchNewsData(){\n    fetch(\"http://localhost:3001/news\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n          alertError(result);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  conditionalRender(){\n    if (this.state.isLoaded){\n      const newsCards = [];\n      const newsItems = this.state.items[\"articles\"];\n      let headline, imageURL, url, loaded;\n      for (let i = 0; i < newsItems.length; i++) {\n        headline = newsItems[i].title;\n        imageURL = newsItems[i].urlToImage;\n        url = newsItems[i].url;\n        loaded = this.state.isLoaded;\n        newsCards.push(\n            <a key={headline} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n              <NewsContents loaded={loaded} image={imageURL} headline={headline} />\n            </a>\n        )\n      }\n      return newsCards;\n    }else{\n      return <BlankContents />\n    }\n  }\n  render(){\n    const display = this.conditionalRender();\n    return (\n      <div className=\"articles-news\">\n        <Card title=\"News\" className=\"card-news\">\n          {display}\n        </Card>\n      </div>\n    );\n  }\n}\n\nfunction NewsContents(props) {\n  return (\n    <Row style={{width: \"100%\"}}>\n      <Card loading={!props.loaded} className=\"article-single ant-btn-primary\">\n        <Row>\n          <Col span={3} style={{marginRight: \"10px\"}}>\n            <Avatar \n              shape=\"square\" \n              icon={<AlignLeftOutlined />}\n              size=\"large\" \n              src={props.image} \n            />\n          </Col>\n          <Col span={19}>\n            {props.headline}\n          </Col>\n        </Row>\n      </Card>\n    </Row>\n  );\n}\n\nfunction BlankContents(){\n  return(\n    <>\n      <NewsContents key={'1'} loaded={false} image={<AlignLeftOutlined />} headline=\"\" />\n      <NewsContents key={'2'} loaded={false} image={<AlignLeftOutlined />} headline=\"\" />\n      <NewsContents key={'3'} loaded={false} image={<AlignLeftOutlined />} headline=\"\" />\n    </>\n  );\n}\n\nexport {NewsBody};","import React from 'react';\nimport { Card, Col,  Button, Row, Dropdown, Menu } from 'antd';\nimport { ComposedChart, Line, Bar, XAxis, YAxis, CartesianGrid, Tooltip, \n  Legend, ResponsiveContainer } from 'recharts';\nimport { LineChartOutlined } from '@ant-design/icons';\nimport {alertError} from '../helpers/alert';\n\nexport class TickerGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      type: \"TIME_SERIES_DAILY\",\n      interval: null\n    };\n    this.changeInterval = this.changeInterval.bind(this);\n  }\n\n  componentDidMount() {\n    if(!this.props.isError)\n      this.fetchGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.stockTicker !== prevProps.stockTicker) {\n      this.fetchGraphData(this.props.stockTicker);\n    }\n  }\n\n  fetchGraphData(){\n    fetch(\"http://localhost:3001/alphavantage/\" + \n      this.state.type + \"/\" + (this.state.interval? this.state.interval + \"/\" :\"\") + this.props.stockTicker)\n    .then(res => res.json())\n    .then((result) => {\n      alertError(result);\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, (error) => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  async changeInterval(range, inputInterval=null){\n    await this.setState({type: range, interval:inputInterval});\n    this.fetchGraphData();\n  }\n\n\n  render(){\n    const data = this.state.items;\n    console.log(data);\n    return(\n      <Col className = \"graph-col\" >\n        <Card loading={!this.state.isLoaded} className=\"card-graph\">\n          <ResponsiveContainer aspect={1.7} width=\"100%\" height=\"100%\">\n            <ComposedChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5, }}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"date\" />\n              <YAxis \n                yAxisId={0} \n                dataKey=\"open\" \n                domain={['dataMin * .8','dataMax * 1.2']}  \n              />\n              {/* <YAxis \n                yAxisId={1} \n                orientation='right' \n                axisLine={false} \n                domain={['dataMin', 'dataMax']}\n              /> */}\n              <Tooltip />\n              <Legend />\n              {/* <Bar yAXisID={1} dataKey=\"volume\" barSize={10} fill=\"#D3D3D3\" /> */}\n              <Line yAxisID={0} type=\"monotone\" dataKey=\"open\" stroke=\"#82ca9d\" activeDot={{ r: 8 }} />\n              <Line yAxisID={0} type=\"monotone\" dataKey=\"close\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n            </ComposedChart>\n          </ResponsiveContainer>\n          <RangeSelection changeInterval={this.changeInterval}/>\n        </Card>\n      </Col>\n    );\n  }\n}\n\n\nfunction RangeSelection(props){  \n  const menu = (\n    <Menu onClick={(e) => props.changeInterval(\"TIME_SERIES_INTRADAY\", e.key)}>\n      <Menu.Item  key=\"15min\" icon={<LineChartOutlined />}>\n        15min\n      </Menu.Item>\n      <Menu.Item key=\"30min\" icon={<LineChartOutlined />}>\n        30min\n      </Menu.Item>\n      <Menu.Item key=\"60min\" icon={<LineChartOutlined />}>\n        60min\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <Row justify=\"center\">\n      <Dropdown overlay={menu}>\n        <Button >\n          Intraday\n        </Button>\n      </Dropdown>\n      <Button onClick={() => props.changeInterval(\"TIME_SERIES_DAILY\")}>\n        Daily\n      </Button>\n      <Button onClick={() => props.changeInterval(\"TIME_SERIES_WEEKLY\")}>\n        Weekly\n        </Button>\n      <Button onClick={() => props.changeInterval(\"TIME_SERIES_MONTHLY\")}>\n        Monthly\n      </Button>\n      </Row> \n  );\n}","import React from 'react';\nimport { Card, Row, Col, Statistic } from 'antd';\nimport { TickerGraph } from './TickerGraph';\nimport { isGain } from '../helpers/isGain';\nimport { formatNumber } from '../helpers/formatNumber';\nimport { alertError } from '../helpers/alert';\n\nclass TickerBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: {}\n    };\n  }\n  componentDidMount() {\n    this.fetchTickerData();\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.stockTicker !== prevProps.stockTicker) {\n      this.setState({isLoaded: false});\n      this.fetchTickerData(this.props.stockTicker);\n    }\n  }\n\n  fetchTickerData(){\n    fetch(\"http://localhost:3001/alphavantage/GLOBAL_QUOTE/\"+this.props.stockTicker)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          let isError = alertError(result);\n          this.setState({\n            isLoaded: true,\n            items: result, \n            error: isError\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error: true\n          });\n        }\n      )\n  }\n\n  FormatTitle(stockTicker, values){\n    let title = \n      <span title={\"$\"+formatNumber(this.state.items[\"Change\"])}> \n        {stockTicker} &nbsp;\n        {isGain(values[\"Change-percent\"])} &nbsp;\n        ${formatNumber(values[\"Price\"])} &nbsp;\n        <span className=\"light-gray\">{this.state.items[\"Trading-day\"]}</span>\n      </span>\n    return title\n  }\n\n  render(){\n    return (\n    <Card \n      loading={!this.state.isLoaded}\n      title={this.FormatTitle(this.props.stockTicker, this.state.items)} \n      className=\"card-ticker\"\n    >\n      <TickerContents quote={this.state.items} isError={this.state.error} />\n    </Card>);\n    }\n}\n\nfunction TickerContents(props) {\n  const quote = props.quote;\n  return (\n    <Row>\n      <TickerInfo key=\"Open\" title=\"Open\" value={formatNumber(quote[\"Open\"])}  />\n      <TickerInfo key=\"Close\" title=\"Close\" value={formatNumber(quote[\"Close\"])} />\n      <TickerInfo key=\"Volume\" title=\"Volume\" value={formatNumber(quote[\"Volume\"])} />\n      <TickerInfo key=\"High\" title=\"High\" value={formatNumber(quote[\"High\"])} />\n      <TickerInfo key=\"Low\" title=\"Low\" value={formatNumber(quote[\"Low\"])} />\n      {/* <TickerInfo key=\"Trading Day\" title=\"Trading Day\" value={quote[\"Trading-day\"]}  /> */}\n      <TickerGraph stockTicker={quote[\"Symbol\"]} isError={props.isError}/>\n    </Row>\n  );\n}\n\nfunction TickerInfo(props) {\n  return (\n    <Col flex={1} className=\"ticker-info-col\">\n      <Row className=\"ticker-info-row ant-card-body\">\n        <Statistic title={props.title} value={props.value} />\n      </Row>\n    </Col>\n  );\n}\n\nexport {TickerBody};","import React from 'react';\nimport { Card, Row, Col } from 'antd';\nimport { isGain } from '../helpers/isGain';\n\nclass SectorsBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n  componentDidMount() {\n    this.fetchSectorData();\n    this.timerID = setInterval(\n      () => this.fetchSectorData(),\n      60000\n      );\n  }\n\n  fetchSectorData(){\n    fetch(\"http://localhost:3001/alphavantage/SECTOR/\")\n    .then(res => res.json())\n    .then(\n        (result) => {\n        this.setState({\n        isLoaded: true,\n        items: result\n        });\n        },\n        (error) => {\n        this.setState({\n            isLoaded: true,\n            error\n        });\n        }\n    )\n  }\n\n  conditionalRender(){\n    if (this.state.isLoaded){\n      const sectorCards = [];\n      const sectorItems = this.state.items;\n      let change, loaded;\n      Object.keys(sectorItems).forEach(function(key) {\n          loaded = true;\n          change = sectorItems[key];\n          sectorCards.push(\n          <SectorContents key={key} loaded={loaded} title={key} change={change} />\n          );\n      })\n      return sectorCards;\n    }else{\n      return <BlankContents />\n    }\n  }\n  render(){\n    let cardTitle = <> Sectors &nbsp; <span style={{fontSize:\"small\"}}className=\"light-gray\">Real-Time Performance</span></>\n    const display = this.conditionalRender();\n    return (\n    <div className=\"sectors\">\n      <Card title={cardTitle} className=\"card-stocks\">\n        {display}\n      </Card>\n    </div>\n    );\n  }\n}\n\nfunction SectorContents(props) {\n  //event handle on click to switch between percent and actual value\n  return (\n    <Row gutter={[8, 8]}>\n      <Card loading={!props.loaded} className=\"stock-indexes\">\n        <Col>\n          {props.title}\n            <span  style={{float:\"right\"}}>\n              {isGain(props.change)}\n            </span>\n        </Col>\n      </Card>\n    </Row>\n  );\n}\n\nfunction BlankContents(){\n  return(\n    <>\n      <SectorContents key={0} loaded={false}  />\n      <SectorContents key={1} loaded={false}  />\n      <SectorContents key={2} loaded={false}  />\n      <SectorContents key={3} loaded={false}  />\n    </>\n  );\n}\n  \nexport {SectorsBody};\n","import React from 'react';\nimport { GithubOutlined, LinkedinOutlined, TwitterOutlined } from '@ant-design/icons';\n\nexport function Footer() {\n  return (\n    <div className=\"footer\">\n        <a href=\"https://www.linkedin.com/in/ericventor/\" className=\"footer-icons\" >\n            <LinkedinOutlined />\n        </a>\n        <a href=\"https://twitter.com/EricNotor\"className=\"footer-icons\" >\n            <TwitterOutlined />\n        </a>\n        <a href=\"https://www.github.com/ericvtheg\" className=\"footer-icons\" >\n            <GithubOutlined />\n        </a>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Layout, Row, Col } from 'antd';\nimport './index.css';\nimport { Header, NewsBody, TickerBody, SectorsBody, Footer } from './components/CardBody';\n\nclass CardBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockTicker: \"FB\"\n    };\n  }\n  render(){\n    return(\n      <>\n        <Header searchFunction={value => {if(value !== \"\") this.setState({stockTicker: value.toUpperCase()})}}/>\n        <Layout style={{background: \"white\"}} >\n          <Row style={{margin:\"0px 20px\"}}>\n            <Col flex={\"4 1 350px\"} className=\"ticker-col antd-flex-grow-1\">\n              <TickerBody stockTicker={this.state.stockTicker}/>\n            </Col>\n            <Col flex={\"2 0 200px\"} className=\"news-and-stocks-col\">\n              <Row className=\"height-limit\">\n                <NewsBody keyword=\"\"/>\n              </Row>\n              <Row className=\"height-limit\">\n                <SectorsBody />\n              </Row>\n            </Col>\n          </Row>\n        </Layout>\n        <Footer />\n      </>\n    );\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout style={{background: \"white\"}}>\n      <CardBody />\n    </Layout>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}